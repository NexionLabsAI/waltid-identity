# This configuration file is used for setting up OIDC login
# with an OIDC server for the Web Wallet.
#
# OIDC in this file is exclusively related to login/authentication with the Web Wallet.
# It does not refer to any OIDC credential exchange protocol.
enableOidcLogin = true
# This example configuration can be used for Keycloak.
providerName = keycloak
# publicBaseUrl = "http://localhost:${DEMO_WALLET_FRONTEND_PORT}"
publicBaseUrl = "https://wallet-api.dev.nexionlabs.ai"
# Enter the realm URL
# oidcRealm = "http://0.0.0.0:8080/realms/waltid-keycloak-ktor"
oidcRealm = "https://auth.dev.nexionlabs.ai/realms/waltid-keycloak-ktor"
# JWKS (to verify access keys the user claims to received through OIDC server)
oidcJwks = "https://auth.dev.nexionlabs.ai/realms/waltid-keycloak-ktor/protocol/openid-connect/certs"
oidcScopes = ["roles"]

authorizeUrl = "https://auth.dev.nexionlabs.ai/realms/waltid-keycloak-ktor/protocol/openid-connect/auth"
accessTokenUrl = "https://auth.dev.nexionlabs.ai/realms/waltid-keycloak-ktor/protocol/openid-connect/token"
logoutUrl = "https://auth.dev.nexionlabs.ai/realms/waltid-keycloak-ktor/protocol/openid-connect/logout"

clientId = "waltid_backend"

# Keycloak authentication strategy
keycloakUserApi = "https://auth.dev.nexionlabs.ai/admin/realms/waltid-keycloak-ktor/users"
clientSecret = "FEPgrimWuXz4wScr4iL6ng10Ydc5p36c"
# JWKS is cached:
jwksCache = {
    cacheSize = 10
    cacheExpirationHours = 24
    rateLimit: {
        bucketSize: 10
        refillRateMinutes: 1
    }
}